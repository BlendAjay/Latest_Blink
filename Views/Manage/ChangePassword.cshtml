@model AJSolutions.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";

    AJSolutions.Models.UserViewModel user = ViewData["UserProfile"] as AJSolutions.Models.UserViewModel;

    if (user.Role == "Admin" || user.Role == "Client" || user.Role == "Partner")
    {
        Layout = "~/Areas/CMS/Views/Shared/_Layout.cshtml";
    }
    else if (user.Role == "Employee")
    {
        Layout = "~/Areas/EMS/Views/Shared/_Layout.cshtml";
    }
    else if (user.Role == "Candidate")
    {
        Layout = "~/Areas/Candidate/Views/Shared/_Layout.cshtml";
    }
}

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", @id = "ChangePassword", @role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("DataStatus", ViewBag.SaveStatus as string)

    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="page-header">
                <div class="page-breadcrumb">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#" class="breadcrumb-link">Dashboard</a></li>
                            <li class="breadcrumb-item"><a href="#" class="breadcrumb-link">Change Password</a></li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="form-process"></div>
                <h5 class="card-header">Change Password</h5>
                <div class="card-body">
                    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @Html.LabelFor(m => m.OldPassword, "Old Password")
                        <div class="input-group divcenter">
                            <span class="input-group-addon"><i class="icon-lock"> </i></span>
                            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", placeholder = "Old Password *", id = "OldPassword", required = "required" })
                        </div>
                        <br />
                        @Html.LabelFor(m => m.NewPassword, "New Password")
                        <div class="input-group divcenter">
                            <span class="input-group-addon"><i class="icon-lock"> </i></span>
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "New Password *", id = "NewPassword", required = "required" })
                        </div>
                        <br />
                        @Html.LabelFor(m => m.ConfirmPassword, "Confirm Password")
                        <div class="input-group divcenter">
                            <span class="input-group-addon"><i class="icon-lock"> </i></span>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password *", id = "ConfirmPassword", required = "required" })
                        </div>
                        <br />
                        <button type="submit" id="password" class="btn btn-primary" style="float:right">Change Password</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.Hidden("RedirectTo", Url.Action("Login", "Account", new { area = "" }))
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('#password').click(function (e) {
            e.preventDefault();

            if ($("#OldPassword").val() == undefined || $('#OldPassword').val() == '') {
                $.alert({
                    title: 'Alert',
                    content: '<b>Old Password</b> is required',
                    confirmButton: 'OK',
                    confirmButtonClass: 'button button-3d button-rounded button-red',
                    icon: 'icon-thumbs-down2 icon-2x ',
                    animation: 'zoom',
                    confirm: function () {
                    }
                });
                $("#OldPassword").focus();
                return false;
            }
            if ($("#NewPassword").val() == undefined || $('#NewPassword').val() == '') {
                $.alert({
                    title: 'Alert',
                    content: '<b>New Password</b> is required',
                    confirmButton: 'OK',
                    confirmButtonClass: 'button button-3d button-rounded button-red',
                    icon: 'icon-thumbs-down2 icon-2x ',
                    animation: 'zoom',
                    confirm: function () {
                    }
                });
                $("#NewPassword").focus();
                return false;
            }
            if ($("#ConfirmPassword").val() == undefined || $('#ConfirmPassword').val() == '') {
                $.alert({
                    title: 'Alert',
                    content: '<b>Confirm Password</b> is required',
                    confirmButton: 'OK',
                    confirmButtonClass: 'button button-3d button-rounded button-red',
                    icon: 'icon-thumbs-down2 icon-2x ',
                    animation: 'zoom',
                    confirm: function () {
                    }
                });
                $("#ConfirmPassword").focus();
                return false;
            }

            $('#ChangePassword').submit();
            $('.form-process').fadeIn();
        });

        $(document).ready(function () {
            if ($('#DataStatus').val() == "Succeeded") {
                $('.form-process').fadeOut()
                $.alert({
                    title: 'Cheers',
                    content: 'Password changed<b> SUCCESSFULLY.</b>',
                    confirmButton: 'OK',
                    confirmButtonClass: 'btn btn-primary',
                    icon: 'fa fa-thumbs-up fa-2x',
                    animation: 'zoom',
                    confirm: function () {
                        var url = $("#RedirectTo").val();
                        location.href = url;
                    }
                });
            }
        });
        $(document).ready(function () {
            if ($('#DataStatus').val() == "NoMatch") {
                $('.form-process').fadeOut()
                $.alert({
                    title: 'Oops',
                    content: 'The new password and confirmation password do not match',
                    confirmButton: 'OK',
                    confirmButtonClass: 'btn btn-primary',
                    icon: 'fa fa-thumbs-down fa-2x ',
                    animation: 'zoom',
                    confirm: function () {
                    }
                });
            }
        });
        $(document).ready(function () {
            if ($('#DataStatus').val() == "Failed") {
                $('.form-process').fadeOut()
                $.alert({
                    title: 'Oops',
                    content: 'Password didnot <b> Match.</b>',
                    confirmButton: 'OK',
                    confirmButtonClass: 'btn btn-primary',
                    icon: 'fa fa-thumbs-down fa-2x ',
                    animation: 'zoom',
                    confirm: function () {
                    }
                });
            }
        });


        function pagehelp() {
            $('#Popup').modal('show');
            $("#Popup").modal({
                backdrop: 'static',
                keyboard: false,
            })
        };

    </script>
}
